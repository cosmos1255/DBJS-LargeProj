{"version":3,"sources":["Pages/Login.js","Pages/SignUp.js","Pages/ViewCards.js","Pages/Home.js","Pages/EditCard.js","Pages/EditLoginInfo.js","Pages/SignUpPart2.js","serviceWorker.js","index.js","App.js"],"names":["Login","class","method","for","id","type","name","required","SignUp","occupations","value","label","SignUpPart2","placeholder","options","pattern","Boolean","window","location","hostname","match","ReactDOM","render","to","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.944b7fbb.chunk.js","sourcesContent":["import React from \"react\";\r\n// import {\r\n//     BrowserRouter as Link\r\n// } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div class=\"login-header\">\r\n      <h2>Login</h2>\r\n      <form method=\"post\">\r\n        <label for=\"username\">Username:</label>\r\n        <input id=\"login-box\" type=\"username\" name=\"username\" required></input>\r\n        <br />\r\n        <label for=\"password\">Password:</label>\r\n        <input id=\"login-box\" type=\"password\" name=\"password\" required></input>\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import {\r\n//     BrowserRouter as Link\r\n// } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nexport default function SignUp() {\r\n  return (\r\n    <div class=\"login-header\">\r\n      <h2>Sign Up</h2>\r\n      <form method=\"post\">\r\n        <label for=\"username\">New Username:</label>\r\n        <input id=\"login-box\" type=\"username\" name=\"username\" required></input>\r\n        <br />\r\n        <label for=\"password\">New Password:</label>\r\n        <input id=\"login-box\" type=\"password\" name=\"password\" required></input>\r\n        <br />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./App.css\";\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div class=\"login-header\">\r\n            <h1>View Contacts Page</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./App.css\";\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div class=\"login-header\">\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./App.css\";\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div class=\"login-header\">\r\n            <h1>Edit Personal Card Page</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./App.css\";\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div class=\"login-header\">\r\n            <h1>Edit Login Info Page</h1>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n// import {\r\n//     BrowserRouter as Link\r\n// } from \"react-router-dom\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport \"./App.css\";\r\n\r\nconst occupations = [\r\n  { value: \"student\", label: \"Student\" },\r\n  { value: \"employed\", label: \"Employed\" },\r\n  { value: \"other\", label: \"Other\" }\r\n];\r\n\r\nexport default function SignUpPart2() {\r\n  return (\r\n    <div class=\"login-header\">\r\n      <h2>Complete Profile Info</h2>\r\n      <form method=\"post\">\r\n        <label for=\"full_name\">Full Name:</label>\r\n        <input\r\n          id=\"login-box\"\r\n          type=\"name\"\r\n          name=\"full_name\"\r\n          placeholder=\"ex. John Doe\"\r\n          required\r\n        ></input>\r\n        <br />\r\n        <label for=\"occupation\">Occupation:</label>\r\n        <Dropdown\r\n          options={occupations}\r\n          value=\"<select from below>\"\r\n          placeholder=\"Select an occupation.\"\r\n        />\r\n        <label for=\"comp_school\">Company/School:</label>\r\n        <input id=\"login-box\" type=\"text\" name=\"comp_school\"></input>\r\n        <br />\r\n        <label for=\"email\">Email:</label>\r\n        <input\r\n          id=\"login-box\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"ex. john.doe@email.com\"\r\n          required\r\n        ></input>\r\n        <br />\r\n        <label for=\"phone_cell\">Cell Phone:</label>\r\n        <input\r\n          id=\"login-box\"\r\n          type=\"tel\"\r\n          name=\"phone_cell\"\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          placeholder=\"ex. XXX-XXX-XXXX\"\r\n          required\r\n        ></input>\r\n        <br />\r\n        <label for=\"phone_work\">Work Phone:</label>\r\n        <input\r\n          id=\"login-box\"\r\n          type=\"tel\"\r\n          name=\"phone_work\"\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          placeholder=\"ex. XXX-XXX-XXXX\"\r\n          required\r\n        ></input>\r\n        <br />\r\n        <button type=\"submit\">Finish Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./Pages/App.css\";\nimport Login from \"./Pages/Login.js\";\nimport SignUp from \"./Pages/SignUp.js\";\nimport ViewCards from \"./Pages/ViewCards.js\";\nimport Home from \"./Pages/Home.js\";\nimport EditCard from \"./Pages/EditCard.js\";\nimport LoginInfo from \"./Pages/EditLoginInfo.js\";\nimport SignUpPart2 from \"./Pages/SignUpPart2.js\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <Link to=\"/login\">Login</Link>\n          <br />\n          <Link to=\"/signup\">SignUp</Link>\n          <br />\n          <Link to=\"/view_contacts\">ViewCards</Link>\n          <br />\n          <Link to=\"/home\">Home</Link>\n          <br />\n          <Link to=\"/edit_personal_card\">EditCard</Link>\n          <br />\n          <Link to=\"/edit_login_info\">LoginInfo</Link>\n          <br />\n          <Link to=\"/sign_up_info\">SignUpPart2</Link>\n          <br />\n        </nav>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/view_contacts\">\n            <ViewCards />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/edit_personal_card\">\n            <EditCard />\n          </Route>\n          <Route path=\"/edit_login_info\">\n            <LoginInfo />\n          </Route>\n          <Route path=\"/sign_up_info\">\n            <SignUpPart2 />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}